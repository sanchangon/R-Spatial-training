tapply(pop$TOTALTOT, list(pop$POV,pop$CODEY), sum)
addmargins(tapply(pop$TOTALTOT, list(pop$POV,pop$CODEY), sum),2)
addmargins(tapply(pop$TOTALTOT, list(pop$POV,pop$CODEY), sum),1)
read.table("popReg45_58.txt",h=T,as.is = T) -> p
dim(p)
View(p)
str(p)
tapply(p$pop, list(p$year,p$prov), sum)
addmargins(tapply(p$pop, list(p$year,p$prov), sum),2)
addmargins(tapply(p$pop, list(p$year,p$prov), sum),2)
addmargins(tapply(p$pop, list(p$year,p$prov), sum),1)
str(p)
addmargins(tapply(p$pop, list(p$year,p$ageGrp,p$prov), sum),1)
addmargins(tapply(p$pop, list(p$year,p$ageGrp,p$prov), summary))
tapply(p$pop, p$year, summary)
tapply(p$pop, p$ageGrp, summary) # summary only one variable!!
write.csv(p, file="pop45_48.csv")
ls()
n100 <- rnorm(100)
n100
n100 <- rnorm(100, mean=0, sd=1)
hist(n100)
mean(n100); sd(n100)
n1000 <- rnorm(1000, mean=0, sd=1)
hist(n1000)
mean(n1000); sd(n1000)
n1000 <- rnorm(1000, mean=25, sd=2.31)
hist(n1000)
mean(n1000); sd(n1000
n1000 <- rnorm(1000, mean=0, sd=1)
hist(n1000)
mean(n1000); sd(n1000)
n1000 <- rnorm(1000, mean=25, sd=2.31)
hist(n1000)
mean(n1000); sd(n1000
mean(n1000); sd(n1000)
mean(n1000); sd(n1000)
rpois100 <- rpois(100, lambda=3)
rpois100
hist(rpois100)
rbinom100 <- rbinom(100, 20, 0.2)
rbinom100
rbinom100 <- rbinom(100, 20, 0.3)
rbinom100
rbinom100 <- rbinom(100, 20, 1)
rbinom100
dnorm(-1.96); dnorm(-1.96,0,1)
dnorm(1.96); dnorm(1.96,0,1)
qnorm(0.05) ; qnorm(0.05,0,1)
qnorm(0.025)
qnorm(0.975)
pnorm(2)-pnorm(1)
x <- seq(-3,3,0.1)
plot(x,dnorm(x,0,1),type = "l")
? plot
points(x[1],dnorm(x[1]),pch= 21,col="blue")
plot(x,dnorm(x,0,1),type = "l",col="blue")
plot(x,dnorm(x,0,1),type = "l",col="blue",lwd = 2)
plot(x,dnorm(x,0,1),type = "l",col="FF0000",lwd = 2)
plot(x,dnorm(x,0,1),type = "l",col="#FF0000",lwd = 2)
plot(x,dnorm(x,0,1),type = "l",col="#FF0900",lwd = 2)
plot(x,dnorm(x,0,1),type = "l",col="#FF0990",lwd = 2)
points(x[1],dnorm(x[1]),pch= 21,col="blue")
points(x[2],dnorm(x[2]),pch= 21,col="blue")
points(x[3],dnorm(x[3]),pch= 21,col="blue")
points(x[5],dnorm(x[5]),pch= 21,col="blue")
points(x,dnorm(x),pch= 16,col="red")
points(x,dnorm(x),pch= 16,col="green")
points(x[2],dnorm(x[2]),pch= 21,col="blue")
points(x[1],dnorm(x[1]),pch= 21,col="blue")
points(x[2],dnorm(x[2]),pch= 21,col="blue")
points(x[3],dnorm(x[3]),pch= 21,col="blue")
points(x[5],dnorm(x[5]),pch= 21,col="blue")
plot(x,dnorm(x,0,1),type = "l",col="#FF0990",lwd = 2)
points(x[1],dnorm(x[1]),pch= 21,col="blue")
points(x[2],dnorm(x[2]),pch= 21,col="blue")
points(x[3],dnorm(x[3]),pch= 21,col="blue")
points(x[5],dnorm(x[5]),pch= 21,col="blue")
points(x[50],dnorm(x[5]),pch= 21,col="blue")
points(x[50],dnorm(x[50]),pch= 21,col="blue")
points(x[1],dnorm(x[1]),pch= 21,col="blue")
points(x[2],dnorm(x[2]),pch= 21,col="blue")
points(x[3],dnorm(x[3]),pch= 21,col="blue")
points(x[5],dnorm(x[5]),pch= 21,col="blue")
points(x[50],dnorm(x[50]),pch= 21,col="blue")
plot(x,dnorm(x,0,1),type = "l",col="#FF0990",lwd = 2)
points(x[1],dnorm(x[1]),pch= 21,col="blue")
points(x[2],dnorm(x[2]),pch= 21,col="blue")
points(x[3],dnorm(x[3]),pch= 21,col="blue")
points(x[5],dnorm(x[5]),pch= 21,col="blue")
points(x[50],dnorm(x[50]),pch= 21,col="blue")
plot(x,dnorm(x,0,1),type = "l",col="#FF0990",lwd = 2)
points(x,dnorm(x),pch=25 ,col="green", cex=2)
points(x,dnorm(x),pch=20 ,col="green", cex=2)
plot(x,dnorm(x,0,1),type = "l",col="#FF0990",lwd = 2)
points(x,dnorm(x),pch=7 ,col="blue", cex=2)
plot(x,dnorm(x,0,1),type = "l",col="#FF0990",lwd = 2)
points(x,dnorm(x),pch=7 ,col="blue", cex=1)
points(x,dnorm(x),pch=7 ,col="blue", cex=1)
points(x,dnorm(x),pch=97 ,col="blue", cex=1)
plot(x,dnorm(x,0,1),type = "l",col="#FF0990",lwd = 2)
points(x,dnorm(x),pch=97 ,col="blue", cex=1)
plot(x,dnorm(x,0,1),type = "l",col="#FF0990",lwd = 2)
points(x,dnorm(x),pch=7 ,col="blue", cex=1)
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
str(p)
plot(p$ageGrp~p$pop, data=p)
plot(p$ageGrp~p$pop, data=p type="l")
plot(p$ageGrp~p$pop)
plot(p$ageGrp~p$pop, col="blue", cex=1)
plot(p$pop~p$ageGrp, col="blue", cex=1)
plot(p$pop, p$ageGrp, col="blue", cex=1)
plot(p$ageGrp, p$pop, col="blue", cex=1)
barplot(p$ageGrp, p$pop)
barplot(p$pop, p$ageGrp)
barplot(p$pop, p$prov)
barplot(p$prov)
barplot(p$pop, p$sex)
barplot(p$pop, main = p$pop, xlab = "test1", ylab = "fff")
barplot(p$pop, main = p$pop, xlab = "test")
barplot(p$pop, main = p$pop,)
barplot(p$pop, p$ageGrp)
y <- 0:30
plot(y,dbinom(y, 30, 0.25),type = "h")
z <- 0:50
plot(z,dpois(z, 10),type = "h")
read.csv("d2.csv", row.names=1) -> d
boxplot(d$sbp,col="blue")
boxplot(d$sbp,col="red",horizontal = T)
boxplot(d$dbp,col="red",horizontal = T)
boxplot(d$dbp~d$sex,col="red",horizontal = T)
boxplot(d$dbp~d$sex,col="red",horizontal = T)
boxplot(d$dbp~d$sex,col="red",horizontal = T)
boxplot(d$dbp,col="red",horizontal = T)
boxplot(d$dbp~d$sex,col="green",horizontal = T)
boxplot(d$dbp~d$sex,col="green",horizontal = T)
boxplot?
boxplot ?
boxplot(d$dbp~d$sex,col="green",horizontal = T, main="Car Milage Data", xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(d$dbp~d$sex,col="green",horizontal = T, main="Sex~dbp", xlab="Male and Female", ylab="Number")
boxplot(d$dbp~d$sex,col="green",horizontal = F, main="Sex~dbp", xlab="Male and Female", ylab="Number")
boxplot(d$dbp~d$sex,col="green",horizontal = F, main="Sex~dbp", xlab="Sex", ylab="dbp")
points(1,85, col="red",lwd=5)
points(2,83, col="red",lwd=5)
points(1,85, col="red",lwd=1)
points(2,83, col="red",lwd=1)
points(1,85, col="red",lwd=1, cex = 1.5)
points(2,83, col="red",lwd=1, cex = 1.5)
points(2,83, col="red",lwd=5, cex = 1.5)
points(1,85, col="red",lwd=5, cex = 1.5)
points(1,85, col="red",pch=5, cex = 1.5)
points(2,83, col="red",pch=5, cex = 1.5)
points(1,85, col="red",pch=5, cex = 1.5,lwd=2)
points(2,83, col="red",pch=5, cex = 1.5,lwd=2)
points(1,85, col="red",pch=5, cex = 0.5)
boxplot(d$dbp~d$sex,col="green",horizontal = F, main="Sex~dbp", xlab="Sex", ylab="dbp")
points(1,85, col="red",pch=5, cex = 0.5)
boxplot(d$dbp~d$sex,col="green",horizontal = F, main="Sex~dbp", xlab="Sex", ylab="dbp")
points(1,85, col="red",pch=5, cex = 2)
points(2,83, col="red",pch=5, cex = 2)
boxplot(d$dbp~d$sex,col="green",horizontal = F, main="Title: Sex~dbp", xlab="sex", ylab="dbp")
points(1,85, col="red",pch=16, cex = 1)
points(2,83, col="red",pch=15, cex = 1)
points(2,83, col="red",pch=16, cex = 1)
boxplot(d$dbp~d$sex,col="green",horizontal = F, main="Title: Sex~dbp", xlab="sex", ylab="dbp")
points(1,85, col="red",pch=16, cex = 1)
points(2,83, col="red",pch=16, cex = 1)
med <- tapply(d$dbp,d$sex, median)
table(med)
boxplot(d$dbp~d$sex,col="green",horizontal = F, main="Title: Sex~dbp", xlab="sex", ylab="dbp")
points(1,med[1], col="red",pch=16, cex = 1)
points(2,med[2], col="red",pch=16, cex = 1)
boxplot(d$dbp~d$sex,col="green",horizontal = F,las=1, main="Title: Sex~dbp", xlab="sex", ylab="dbp")
boxplot(d$dbp~d$sex,col="green", horizontal=F,las=1, main="Title: Sex~dbp", xlab="sex", ylab="dbp")
points(1,med[1], col="red",pch=16, cex = 1)
points(2,med[2], col="red",pch=16, cex = 1)
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
boxplot(d$dbp~d$sex,col="green", horizontal=F,las=1, main="Title: Sex~dbp", xlab="sex", ylab="dbp")
med <- tapply(d$dbp,d$sex, median)
table(med)
points(1,med[1], col="red",pch=16, cex = 1)
points(2,med[2], col="red",pch=16, cex = 1)
boxplot(d$dbp~d$sex,col="green", horizontal=F,las=1, main="Title: Sex~dbp", xlab="sex", ylab="dbp")
med <- tapply(d$dbp,d$sex, median)
table(med)
points(1,med[1], col="red",pch=16, cex=2)
points(2,med[2], col="red",pch=16, cex=2)
hist(d$wt, ylim=c(0,350), col = "yellow", xlab= "weight(Kgs)")
View(d)
hist(d$wt, ylim=c(0,250), col = "yellow", xlab= "weight(Kgs)")
boxplot(d$wt, horizontal = T, col= "pink", add=T, at=300, boxwex=60)
hist(d$wt, ylim=c(0,250), col = "yellow", xlab= "weight(Kgs)")
boxplot(d$wt, horizontal = T, col= "pink", add=T, at=300, boxwex=60)
hist(d$wt, ylim=c(0,350), col = "yellow", xlab= "weight(Kgs)")
boxplot(d$wt, horizontal = T, col= "pink", add=T, at=300, boxwex=60)
hist(d$wt, ylim=c(0,350), col = "yellow", xlab= "weight(Kgs)", las=1)
boxplot(d$wt, horizontal = T, col= "pink", add=T, at=300, boxwex=60)
boxplot(d$wt, horizontal = T, col= "pink", add=T, at=250, boxwex=60)
hist(d$wt, ylim=c(0,300), col = "yellow", xlab= "weight(Kgs)", las=1)
boxplot(d$wt, horizontal = T, col= "pink", add=T, at=250, boxwex=60)
hist(d$sbp, ylim=c(0,650), col = "yellow", xlab= "SBP")
boxplot(d$sbp, horizontal = T, col= "pink", add=T, at=500, boxwex=80)
mean(d$sbp)-> averageSBP
points(averageSBP,500,pch=16,col= "red")
points(averageSBP,700,pch=16,col= "red")
points(averageSBP,700,pch=16,col= "red")
boxplot(d$sbp, horizontal = T, col= "pink", add=T, at=500, boxwex=80)
points(averageSBP,700,pch=16,col= "red")
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
hist(d$sbp, ylim=c(0,650), col = "yellow", xlab= "SBP")
boxplot(d$sbp, horizontal = T, col= "pink", add=T, at=500, boxwex=80)
mean(d$sbp)-> averageSBP
median(d$sbp) -> medSBP
points(medSBP,500,pch=16,col= "red",cex=2)
hist(d$sbp, ylim=c(0,650), col = "yellow", xlab= "SBP")
boxplot(d$sbp, horizontal = T, col= "pink", add=T, at=500, boxwex=80)
mean(d$sbp)-> averageSBP
median(d$sbp) -> medSBP
points(medSBP,500,pch=16,col= "gray",cex=2)
hist(d$sbp, ylim=c(0,650), col = "yellow", xlab= "SBP")
boxplot(d$sbp, horizontal = T, col= "pink", add=T, at=500, boxwex=80)
mean(d$sbp)-> averageSBP
median(d$sbp) -> medSBP
points(medSBP,500,pch=8,col= "blue",cex=2)
hist(d$sbp, ylim=c(0,650), col = "yellow", xlab= "SBP")
boxplot(d$sbp, horizontal = T, col= "pink", add=T, at=500, boxwex=80)
mean(d$sbp)-> averageSBP
median(d$sbp) -> medSBP
points(medSBP,500,pch=8,col= "red",cex=1)
hist(d$sbp, ylim=c(0,650), col = "yellow", xlab= "SBP")
boxplot(d$sbp, horizontal = T, col= "pink", add=T, at=500, boxwex=80)
mean(d$sbp)-> averageSBP
median(d$sbp) -> medSBP
points(medSBP,500,pch=15,col= "red",cex=1)
hist(d$sbp, ylim=c(0,650), col = "yellow", xlab= "SBP")
boxplot(d$sbp, horizontal = T, col= "pink", add=T, at=500, boxwex=80)
mean(d$sbp)-> averageSBP
median(d$sbp) -> medSBP
points(medSBP,500,pch=15,col= "red",cex=2)
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
cars <- c(1, 3, 6, 4, 9)
barplot(cars)
# Read values from tab-delimited autos.dat
autos_data <- read.table("C:/R/autos.dat", header=T, sep="\t")
# Graph cars with specified labels for axes.  Use blue
# borders and diagnal lines in bars.
barplot(autos_data$cars, main="Cars", xlab="Days",
ylab="Total", names.arg=c("Mon","Tue","Wed","Thu","Fri"),
border="blue", density=c(10,20,30,40,50))
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
# Graph autos with adjacent bars using rainbow colors
barplot(as.matrix(autos_data), main="Autos", ylab= "Total",
beside=TRUE, col=rainbow(5))
# Place the legend at the top-left corner with no frame
# using rainbow colors
legend("topleft", c("Mon","Tue","Wed","Thu","Fri"), cex=0.6,
bty="n", fill=rainbow(5));
# Graph autos with adjacent bars using rainbow colors
barplot(as.matrix(autos_data), main="Autos", ylab= "Total",
beside=TRUE, col=rainbow(5))
# Place the legend at the top-left corner with no frame
# using rainbow colors
legend("topleft", c("Mon","Tue","Wed","Thu","Fri"), cex=0.6,
bty="n", fill=rainbow(5))
# Expand right side of clipping rect to make room for the legend
par(xpd=T, mar=par()$mar+c(0,0,0,4))
# Graph autos (transposing the matrix) using heat colors,
# put 10% of the space between each bar, and make labels
# smaller with horizontal y-axis labels
barplot(t(autos_data), main="Autos", ylab="Total",
col=heat.colors(3), space=0.1, cex.axis=0.8, las=1,
names.arg=c("Mon","Tue","Wed","Thu","Fri"), cex=0.8)
# Place the legend at (6,30) using heat colors
legend(6, 30, names(autos_data), cex=0.8, fill=heat.colors(3));
# Restore default clipping rect
par(mar=c(5, 4, 4, 2) + 0.1)
hist(d$sbp, ylim=c(0,650), col = "yellow", xlab= "SBP")
boxplot(d$sbp, horizontal = T, col= "pink", add=T, at=500, boxwex=80)
mean(d$sbp)-> averageSBP
median(d$sbp) -> medSBP
points(medSBP,500,pch=15,col= "red",cex=2)
str(autos_data)
table(autos_data)
table(autos_data$cars)
addmargins(table(autos_data$cars))
table(autos_data$cars)
table(autos_data)
str(autos_data)
autos_data
autos_data
str(autos_data)
barplot(t(autos_data), main="Autos", ylab="Total",
col=heat.colors(3), space=0.1, cex.axis=0.8, las=1,
names.arg=c("Mon","Tue","Wed","Thu","Fri"), cex=0.8)
# Place the legend at (6,30) using heat colors
legend(6, 30, names(autos_data), cex=0.8, fill=heat.colors(3));
# Restore default clipping rect
par(mar=c(5, 4, 4, 2) + 0.1)
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
adj = c(0,0))
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
text(2, 1, "chai",  adj = c(0,0))
text(4, 1, "chai",  adj = c(0,0))
# Graph autos (transposing the matrix) using heat colors,
# put 10% of the space between each bar, and make labels
# smaller with horizontal y-axis labels
barplot(t(autos_data), main="Autos", ylab="Total",
col=heat.colors(3), space=0.1, cex.axis=0.8, las=1,
names.arg=c("Mon","Tue","Wed","Thu","Fri"), cex=0.8)
# Place the legend at (6,30) using heat colors
legend(6, 30, names(autos_data), cex=0.8, fill=heat.colors(3));
# Restore default clipping rect
par(mar=c(5, 4, 4, 2) + 0.1)
text(4, 1, "chai",  adj = c(0,0))
# Graph cars with specified labels for axes.  Use blue
# borders and diagnal lines in bars.
barplot(autos_data$cars, main="Cars", xlab="Days",
ylab="Total", names.arg=c("Mon","Tue","Wed","Thu","Fri"),
border="blue", density=c(10,20,30,40,50))
# Graph autos with adjacent bars using rainbow colors
barplot(as.matrix(autos_data), main="Autos", ylab= "Total",
beside=TRUE, col=rainbow(5))
# Place the legend at the top-left corner with no frame
# using rainbow colors
legend("topleft", c("Mon","Tue","Wed","Thu","Fri"), cex=0.6,
bty="n", fill=rainbow(5))
# Expand right side of clipping rect to make room for the legend
par(xpd=T, mar=par()$mar+c(0,0,0,4))
# Graph autos (transposing the matrix) using heat colors,
# put 10% of the space between each bar, and make labels
# smaller with horizontal y-axis labels
barplot(t(autos_data), main="Autos", ylab="Total",
col=heat.colors(3), space=0.1, cex.axis=0.8, las=1,
names.arg=c("Mon","Tue","Wed","Thu","Fri"), cex=0.8)
# Place the legend at (6,30) using heat colors
legend(6, 30, names(autos_data), cex=0.8, fill=heat.colors(3));
# Restore default clipping rect
par(mar=c(5, 4, 4, 2) + 0.1)
stem(d$age)
qqnorm(d$age)
qqline(d$age,col="red",lwd="3")
abline(d$age,col="red",lwd="3")
qqline(d$age,col="red",lwd="3")
t.test(d$wt, mu=100)
t.test(d$wt, mu=62.5) -> ttest
t.test(d$wt, mu=62.5) -> ttest
ls(ttest)
ttest$p.value
t.test(d$wt, mu=62.5)
t.test(d$wt, mu=100)
t.test(d$wt, mu=62.5)
t.test(d$wt, mu=100)
print("hello")
ls(ttest)
ttest$p.value
print("hello R")
print("hello R") ttest$p.value
print(ttest$p.value)
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
print("p value: ",ttest$p.value)
print("p value: ", ttest$p.value)
print("p value:", ttest$p.value)
print("p value:"&ttest$p.value)
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
ls(ttest)
ttest$estimate
ttest$statistic
t.test(d$wt, mu=62.5)
paste(c("Hi result: ", ttest$p.value), collapse = " ")
paste(c("Result of p.value: ", ttest$p.value), collapse = " ")
print("End")
paste(c("Result of p.value: ", ttest$p.value), collapse = "/")
paste(c("Result of p.value: ", ttest$p.value), collapse = "->")
paste(c("Result of p.value:", ttest$p.value), collapse = " ")
capture.output(cat("Result of p.value:", ttest$p.value)))
capture.output(cat("Result of p.value:", ttest$p.value))
before <- c(12,14,11,15,12,14,13,12,15,14)
after <- c(14,15,15,15,13,13,16,14,16,14)
t.test(after,before, paired=T,    data=cbind(before,after))  -> pttest
ls(pttest)
pttest$p.value
t.test(after,before, paired=T,    data=cbind(before,after))
ls(pttest)
pttest$statistic
pttest$conf.int
print(paste("The year is", 2010))
print(paste("The year is", 2011))
print(paste("The year is", 2012))
print(paste("The year is", 2013))
print(paste("The year is", 2014))
print(paste("The year is", 2015))
for (year in c(2010,2011,2012,2013,2014,2015)){
print(paste("The year is", year))
}
for (year in 2010:2015){
print(paste("The year is", year))
}
for (i in 2010:2015){
print(paste("The year is", i))
}
for (i in 1:10) {
if (!i %% 2){
next
}
print(i)
}
for (i in 1:10) {
if (!i %% 1){
next
}
print(i)
}
for (i in 1:10) {
if (!i %% 4){
next
}
print(i)
}
for (i in 1:10) {
if (!i %% 2){
next
}
print(i)
}
t.test(d$wt~d$sex,data=d)  -> ttest
ls(ttest)
ttest$p.value
by(d$wt, d$sex, summary)
tapply(d$wt, d$sex, summary)
t.test(d$wt~d$sex,data=d,"greater")  -> ttest
ls(ttest)
t.test(d$wt~d$sex,data=d,"less")  -> ttest
ls(ttest)
t.test(d$wt~d$sex,data=d,alternative = "less")  -> ttest
ls(ttest)
t.test(d$wt~d$sex,data=d,alternative = "less")
t.test(d$wt~d$sex,data=d,alternative = "greater")
pain = c(4, 5, 4, 3, 2, 4, 3, 4, 4, 6, 8, 4, 5, 4, 6, 5, 8, 6, 6, 7, 6, 6, 7, 5, 6, 5, 5)
drug = c(rep("A",9), rep("B",9), rep("C",9))
migraine = data.frame(pain,drug)
migraine
plot(pain ~ drug, data=migraine)
results = aov(pain ~ drug, data=migraine)
summary(results)
anova(results)
plot(pain ~ drug, data=migraine)
results = aov(pain ~ drug, data=migraine)
summary(results)
anova(results)
pairwise.t.test(pain, drug, p.adjust="bonferroni")
results = aov(pain ~ drug, data=migraine)
TukeyHSD(results, conf.level = 0.95)
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
pairwise.t.test(pain, drug, p.adjust="bonferroni")
results = aov(pain ~ drug, data=migraine)
TukeyHSD(results, conf.level = 0.95)
hist(d$sbp, ylim=c(0,650), col = "yellow", xlab= "SBP")
boxplot(d$sbp, horizontal = T, col= "pink", add=T, at=500, boxwex=80)
mean(d$sbp)-> averageSBP
median(d$sbp) -> medSBP
points(medSBP,500,pch=15,col= "red",cex=2)
# Multiple comparisons
pairwise.t.test(pain, drug, p.adjust="bonferroni")
results = aov(pain ~ drug, data=migraine)
TukeyHSD(results, conf.level = 0.95)
boxplot(d$dbp~d$sex,col="green", horizontal=F,las=1, main="Title: Sex~dbp", xlab="sex(m/f)", ylab="dbp(...)")
med <- tapply(d$dbp,d$sex, median)
table(med)
points(1,med[1], col="red",pch=16, cex=2)
points(2,med[2], col="red",pch=16, cex=2)
mtext(side=3,adj=0,line=0.5,"Box plot of DBP", font=2)
mtext(side=1,adj=0.5,line=2.5,"Sex" ,font=2)
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
pairwise.t.test(pain, drug, p.adjust="bonferroni")
results = aov(pain ~ drug, data=migraine)
TukeyHSD(results, conf.level = 0.95)
anova(results)
str(d)
View(d)
getwd()
ls()
str(d)
cor(d$age,d$sbp)
lm(d$sbp~d$age)
lm(d$sbp~d$age) -> m1
summary(m1)
cor(d$sbp,d$dbp)
lm(d$sbp~d$dbp) -> m2
summary(m2)
m2
lm(m2)
ls(m2)
ls(m1)
d[9,13,14]
d
str(d)
d [12,10]
d(12,10)
d([12,10])
summary(m2)
lm.r=lm(d$sbp~d$dbp)
summary(lm.r)
coef(lm.r)
resid(lm.r)
fitted(lm.r)
layout(matrix(1:4,2,2))
plot(lm.r)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(lm.r)
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
source('~/R_NU/R12-07-2016.R', encoding = 'UTF-8')
